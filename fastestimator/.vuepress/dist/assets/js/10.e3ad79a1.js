(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{192:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Users can choose one of two ways to start training. Here's the general\nrule of thumb:")]),t._v(" "),a("ul",[a("li",[t._v("Use Command Line Interface for:\n"),a("ul",[a("li",[t._v("General purpose training")]),t._v(" "),a("li",[t._v("Distributed training")]),t._v(" "),a("li",[t._v("Hyperparameter tuning")])])]),t._v(" "),a("li",[t._v("Use Python Console for:\n"),a("ul",[a("li",[t._v("Debugging")])])])]),t._v(" "),a("p",[t._v("Next We use Mnist data as example to demonstrate various ways to launch\ntraining jobs.")]),t._v(" "),a("h1",{attrs:{id:"command-line-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-interface","aria-hidden":"true"}},[t._v("#")]),t._v(" Command Line Interface")]),t._v(" "),a("p",[t._v("[fastestimator]{.title-ref} command will be available after\ninstallation, in order to use the command, users should prepare entry\npoint -- python script that defines the [get_estimator]{.title-ref}\nfunction. Here's the usage:")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .bash} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fastestimator train  \n\nRequired arguments:\n\n--entry_point:      Path of python script that defines 'get_estimator' \n\nOptional arguments:\n\n--input:            Directory where tfrecord is saved or will be saved \n                    (default: /tmp/FEdataset)\n--hyperparameters:  Path of JSON file that defines the input arguments of \n                    'get_estimator' in a dictionary format (default: None)\n--num_process:      Number of parallel training process (default: 1)\n--arg1:             Input argument1 of `get_estimator` function (default: None)\n...                 ...\n--argN:             Input argumentN of `get_estimator` function (default: None)\n")])])]),a("h2",{attrs:{id:"example-1-using-entry-point-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1-using-entry-point-only","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 1: Using entry point only")]),t._v(" "),a("p",[t._v("In this example, [get_estimator]{.title-ref} takes default argument or\nno argument (see\n"),a("a",{attrs:{href:"https://github.build.ge.com/edisonaitk/fastestimator/blob/master/tutorial/mnist.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("mnist"),a("OutboundLink")],1),t._v(").\nThis format is best suited for running a quick single experiment.")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .bash} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fastestimator train --entry_point mnist.py \n")])])]),a("p",[t._v("if you want to save tfrecord to a specific direcoty (E.g, /data/mnist):")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .bash} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fastestimator train --entry_point mnist.py --input /data/mnist\n")])])]),a("h2",{attrs:{id:"example-2-using-entry-point-with-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2-using-entry-point-with-arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 2: Using entry point with arguments")]),t._v(" "),a("p",[t._v("In this case, user can pass arguments of [get_estimator]{.title-ref}\nfrom command line. This is useful when experimenting different\nparameters.")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .bash} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fastestimator train \\\n--entry_point mnist.py \\\n--input /data/mnist \\\n--epochs 3 \\\n--batch_size 64 \\\n--optimizer sgd\n")])])]),a("h2",{attrs:{id:"example-3-using-json-file-as-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3-using-json-file-as-arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 3: Using JSON file as arguments")]),t._v(" "),a("p",[t._v("It may be cool to pass two or three arguments on terminal, but when the\nnumber of arguments is too big (say ~100), it doesn't seem so cool\nanymore. Alternatively, you pass a "),a("a",{attrs:{href:"https://github.build.ge.com/edisonaitk/fastestimator/blob/master/tutorial/mnist_args.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON\nfile"),a("OutboundLink")],1),t._v("\nthat contains all arguments of [get_estimator]{.title-ref} in a\ndictionary format.")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .bash} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("python -m fastestimator.fit \\\n--entry_point mnist.py \\\n--input /data/mnist \\\n--hyperparameters mnist_args.json\n")])])]),a("h1",{attrs:{id:"python-console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-console","aria-hidden":"true"}},[t._v("#")]),t._v(" Python Console")]),t._v(" "),a("h2",{attrs:{id:"example-4-train-in-python-console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-4-train-in-python-console","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 4: Train in python console")]),t._v(" "),a("p",[t._v("For users that prefer running codes in python console (e.g., Jupyter\nnotebook, Spyder, Pycharm), check out "),a("a",{attrs:{href:"https://github.build.ge.com/edisonaitk/fastestimator/blob/master/tutorial/mnist.ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("this\nnotebook"),a("OutboundLink")],1),t._v("\nfor python console training.")]),t._v(" "),a("div",{staticClass:"language-{.sourceCode .python} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('def get_estimator(...)\n...\nreturn estimator\n\nestimator = get_estimator(...)\nestimator.fit("/data/mnist")\n')])])])])},[],!1,null,null,null);e.default=s.exports}}]);